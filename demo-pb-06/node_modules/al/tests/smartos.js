var fs = require('fs'),
    path = require('path'),
    exec = require('child_process').exec,
    pkg = require('../lib/smartos').pkg,
    remoteFile = require('../lib/smartos').remoteFile,
    bash = require('../lib/smartos').bash,
    service = require('../lib/smartos').service,
    flannoFile = require('../lib/smartos').flannoFile;

describe('package', function() {
  it('should confirm if the package is installed', function(done) {
    pkg('gcc47-4.7', done);
  });
  it('should install gmake', function(done) {
    pkg('gmake', done);
  });
  it('should fail if the package doesnt exist', function(done) {
    pkg('teapot', function(err) {
      if (err) {
        done();
      } else {
        done(new Error('No error was thrown, this is not right'));
      } // if..else
    });
  });
});

describe('remoteFile', function() {
  it('should download the file', function(done) {
    remoteFile('http://nginx.org/download/nginx-1.2.3.tar.gz', 'nginx-1.2.3.tar.gz', '/root', done);
  });
  it('should error if the file doesnt exist', function(done) {
    remoteFile('http://nginx.org/download/testfile.tgz', 'testfile.tgz', '/root', function(err) {
      if (err) {
        done();
      } else {
        done(new Error('No error was thrown, this is not right'));
      } // if...else
    });
  });
  it('should not download the file again', function(done) {
    remoteFile('http://nginx.org/download/nginx-1.2.3.tar.gz', 'nginx-1.2.3.tar.gz', '/root', function(err) {
      if (err) {
        done(err);
      } else {
        if (fs.existsSync(path.resolve('/root', 'nginx-1.2.3.tar.gz.1'))) {
          console.log('another file exists');
          return done(new Error('another file was created'));
        } // if
        done();
      } // if...else
    });    
  });
});

describe('Bash Excution', function() {
  it('should extract nginx', function(done) {
    bash({
      cwd : '/root',
      creates : '/root/nginx-1.2.3',
      cmd : ['tar -xzf nginx-1.2.3.tar.gz']
    }, done);
  });
  it('should install nginx', function(done) {
    bash({
      cwd : '/root/nginx-1.2.3',
      creates : '/usr/local/nginx/sbin/nginx',
      cmd : ['./configure', 'make', 'make install']
    }, done);
  });
});

describe('Service : ', function() {
  it('add the service to the system', function(done) {
    service('nginx', 'add', path.resolve(__dirname, 'files/nginx.xml'), function(err) {
      if (err) {
        return done(err);
      }
      // check to see if the service was really added? May not be needed
      exec('svccfg list | grep nginx', function(err, stdout, stderr) {
        if (err) {
           return done(err);
        } // if 
        done();
      });
    });
  });

  it('should start the service', function(done) {
    service('nginx', 'enable', '', function(err) {
      if (err) {
        return done(err);
      } // if
      setTimeout(function(){ 
        exec('ps aux | grep nginx | wc -l', function(err, stdout, stderr) {
          if (err) {
            return done(err);
          }

          if (stdout > 1) {
            return done();
          }
          done(new Error('process not started'));  
        });
      }, 250, done);
    });
  });

  it('should stop the service', function(done) {
    service('nginx', 'disable', '', function(err) {
      if (err) {
        return done(err);
      } // if

      exec('ps aux | grep nginx | wc -l', function(err, stdout, stderr){
        if (err) {
          return done(err);
        } // if

        if (stdout > 1) {
          return done(new Error('process not killed'));
        }
        done();
      });
    });

  });
});

describe('flannoFile :', function() {
  it('should copy the file', function(done) {
    flannoFile(path.resolve(__dirname, 'files/nginx.xml'), '/root/hello.there', function(err) {
      if (err) {
        return done(err);
      } // if

      if (!(fs.existsSync('/root/hello.there'))) {
        return done(new Error('flannoFile not copied'));
      }
      done();
    });
  });
});
